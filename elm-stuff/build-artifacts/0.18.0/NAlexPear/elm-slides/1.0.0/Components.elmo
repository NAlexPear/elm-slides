var _NAlexPear$elm_slides$Components$fields = F2(
	function (model, slide) {
		return model.isEditing ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$textarea,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$value(slide.content),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_NAlexPear$elm_slides$Message$UpdateContent),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		} : {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_evancz$elm_markdown$Markdown$toHtml,
						{ctor: '[]'},
						slide.content),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
	});
var _NAlexPear$elm_slides$Components$slide = F3(
	function (model, slide, acc) {
		var currentLength = _elm_lang$core$List$length(acc);
		var vw = (currentLength - model.step) * 100;
		var position = {
			ctor: '_Tuple2',
			_0: 'left',
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(vw),
				'vw')
		};
		var next = {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('slide'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: position,
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				},
				A2(_NAlexPear$elm_slides$Components$fields, model, slide)),
			_1: {ctor: '[]'}
		};
		return A2(_elm_lang$core$List$append, acc, next);
	});
var _NAlexPear$elm_slides$Components$deckSettingsForm = function (deck) {
	var clickHandler = A3(
		_elm_lang$html$Html_Events$onWithOptions,
		'click',
		{stopPropagation: true, preventDefault: true},
		_elm_lang$core$Json_Decode$succeed(_NAlexPear$elm_slides$Message$NoOp));
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('settings'),
			_1: {
				ctor: '::',
				_0: clickHandler,
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$for('title'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Deck Title:'),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder(deck.title),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$name('title'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_NAlexPear$elm_slides$Message$UpdateTitle),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('pointer'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$QueueSaveDeck),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Save Changes'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _NAlexPear$elm_slides$Components$deckItem = function (deck) {
	var clickHandler = _NAlexPear$elm_slides$Message$ChangeDeck(deck.id);
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('pointer'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(clickHandler),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(deck.title),
			_1: {ctor: '[]'}
		});
};
var _NAlexPear$elm_slides$Components$deckItems = function (decks) {
	return _elm_lang$core$Array$toList(
		A2(_elm_lang$core$Array$map, _NAlexPear$elm_slides$Components$deckItem, decks.others));
};
var _NAlexPear$elm_slides$Components$getHiddenString = function (trigger) {
	return trigger ? '' : ' hidden';
};
var _NAlexPear$elm_slides$Components$deckMenu = function (model) {
	var hiddenString = _NAlexPear$elm_slides$Components$getHiddenString(model.isChangingDeck);
	var classString = A2(_elm_lang$core$Basics_ops['++'], 'menu', hiddenString);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(classString),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$ul,
				{ctor: '[]'},
				_NAlexPear$elm_slides$Components$deckItems(model.decks)),
			_1: {ctor: '[]'}
		});
};
var _NAlexPear$elm_slides$Components$deckSettingsMenu = function (model) {
	var index = model.decks.current.id - 1;
	var maybeDeck = A2(_elm_lang$core$Array$get, index, model.decks.others);
	var menu = function () {
		var _p0 = maybeDeck;
		if (_p0.ctor === 'Just') {
			return _NAlexPear$elm_slides$Components$deckSettingsForm(_p0._0);
		} else {
			return _elm_lang$html$Html$text('No deck information found');
		}
	}();
	var hiddenString = _NAlexPear$elm_slides$Components$getHiddenString(model.isEditingDeck);
	var classString = A2(_elm_lang$core$Basics_ops['++'], 'menu', hiddenString);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(classString),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: menu,
			_1: {ctor: '[]'}
		});
};
var _NAlexPear$elm_slides$Components$icons = function (model) {
	return model.isEditing ? {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('edit fa fa-pencil-square-o'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$alt('Save Slides'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$QueueSave),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'}),
		_1: {ctor: '[]'}
	} : {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('edit fa fa-pencil-square-o'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$alt('Edit Slides'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$ToggleEdit),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('add fa fa-plus'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$AddSlide),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fa fa-trash'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$QueueDelete),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('change fa fa-exchange'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$ToggleChangeDeck),
								_1: {ctor: '[]'}
							}
						},
						_elm_lang$core$List$singleton(
							_NAlexPear$elm_slides$Components$deckMenu(model))),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('settings fa fa-gear'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$ToggleEditDeck),
									_1: {ctor: '[]'}
								}
							},
							_elm_lang$core$List$singleton(
								_NAlexPear$elm_slides$Components$deckSettingsMenu(model))),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	};
};
