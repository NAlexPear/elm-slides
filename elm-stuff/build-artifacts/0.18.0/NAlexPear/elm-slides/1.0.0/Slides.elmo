var _NAlexPear$elm_slides$Slides$deckDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'id',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'title',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_NAlexPear$elm_slides$Types$Deck)));
var _NAlexPear$elm_slides$Slides$decksDecoder = _elm_lang$core$Json_Decode$list(_NAlexPear$elm_slides$Slides$deckDecoder);
var _NAlexPear$elm_slides$Slides$getDecks = function () {
	var url = 'http://localhost:3000/decks';
	var request = A2(_elm_lang$http$Http$get, url, _NAlexPear$elm_slides$Slides$decksDecoder);
	return A2(_elm_lang$http$Http$send, _NAlexPear$elm_slides$Message$GetDecks, request);
}();
var _NAlexPear$elm_slides$Slides$slideEncoder = function (slide) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'content',
				_1: _elm_lang$core$Json_Encode$string(slide.content)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'id',
					_1: _elm_lang$core$Json_Encode$int(slide.id)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _NAlexPear$elm_slides$Slides$slidesEncoder = function (slides) {
	var slidesList = _elm_lang$core$Json_Encode$array(
		A2(_elm_lang$core$Array$map, _NAlexPear$elm_slides$Slides$slideEncoder, slides));
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'slides', _1: slidesList},
			_1: {ctor: '[]'}
		});
};
var _NAlexPear$elm_slides$Slides$slideDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'id',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'content',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_NAlexPear$elm_slides$Types$Slide)));
var _NAlexPear$elm_slides$Slides$slidesDecoder = _elm_lang$core$Json_Decode$array(_NAlexPear$elm_slides$Slides$slideDecoder);
var _NAlexPear$elm_slides$Slides$getSlides = function (deck) {
	var url = A2(
		_elm_lang$core$Basics_ops['++'],
		'http://localhost:3000/decks/',
		_elm_lang$core$Basics$toString(deck));
	var slides = A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'slides',
			_1: {ctor: '[]'}
		},
		_NAlexPear$elm_slides$Slides$slidesDecoder);
	var request = A2(_elm_lang$http$Http$get, url, slides);
	return A2(_elm_lang$http$Http$send, _NAlexPear$elm_slides$Message$GetSlides, request);
};
var _NAlexPear$elm_slides$Slides$patch = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'PATCH',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _NAlexPear$elm_slides$Slides$saveSlides = F2(
	function (newSlides, deck) {
		var responseDecoder = A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'slides',
				_1: {ctor: '[]'}
			},
			_NAlexPear$elm_slides$Slides$slidesDecoder);
		var body = _elm_lang$http$Http$jsonBody(
			_NAlexPear$elm_slides$Slides$slidesEncoder(newSlides));
		var url = A2(
			_elm_lang$core$Basics_ops['++'],
			'http://localhost:3000/decks/',
			_elm_lang$core$Basics$toString(deck));
		var request = A3(_NAlexPear$elm_slides$Slides$patch, url, body, responseDecoder);
		return A2(_elm_lang$http$Http$send, _NAlexPear$elm_slides$Message$SaveSlides, request);
	});
