var _NAlexPear$elm_slides$Main$view = function (model) {
	var icons = _elm_lang$core$List$singleton(
		A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('icons'),
				_1: {ctor: '[]'}
			},
			_NAlexPear$elm_slides$Renderers$renderIcons(model)));
	var renderer = _NAlexPear$elm_slides$Renderers$renderSlide(model);
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html$node,
				'link',
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href('//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html$node,
					'link',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href('main.css'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id('container'),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$List$append,
							icons,
							A3(
								_elm_lang$core$Array$foldl,
								renderer,
								{ctor: '[]'},
								model.slides))),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _NAlexPear$elm_slides$Main$subscriptions = function (model) {
	return _elm_lang$keyboard$Keyboard$ups(_NAlexPear$elm_slides$Message$KeyPress);
};
var _NAlexPear$elm_slides$Main$init = function () {
	var deck = 1;
	return {
		ctor: '_Tuple2',
		_0: {
			step: 0,
			deck: deck,
			decks: {ctor: '[]'},
			slides: _elm_lang$core$Array$empty,
			isEditing: false,
			isChangingDeck: false
		},
		_1: _NAlexPear$elm_slides$Requests$getSlides(deck)
	};
}();
var _NAlexPear$elm_slides$Main$initiateSlideSave = function (model) {
	return A2(_NAlexPear$elm_slides$Requests$saveSlides, model.slides, model.deck);
};
var _NAlexPear$elm_slides$Main$handleEditEscape = F2(
	function (model, code) {
		var action = function () {
			var _p0 = model.isEditing;
			if (_p0 === true) {
				return _NAlexPear$elm_slides$Main$initiateSlideSave(model);
			} else {
				return _elm_lang$core$Platform_Cmd$none;
			}
		}();
		var _p1 = code;
		if (_p1 === 27) {
			return action;
		} else {
			return _elm_lang$core$Platform_Cmd$none;
		}
	});
var _NAlexPear$elm_slides$Main$updateSlides = F2(
	function (model, newContent) {
		var id = model.step + 1;
		var slide = {content: newContent, id: id};
		return A3(_elm_lang$core$Array$set, model.step, slide, model.slides);
	});
var _NAlexPear$elm_slides$Main$addSlide = function (model) {
	var end = _elm_lang$core$Array$length(model.slides);
	var slide = {content: '# This is a new slide \n ...and add some content!', id: end + 1};
	var slides = A2(
		_elm_lang$core$Array$append,
		model.slides,
		A2(_elm_lang$core$Array$push, slide, _elm_lang$core$Array$empty));
	return _elm_lang$core$Native_Utils.update(
		model,
		{step: end, slides: slides, isEditing: true, isChangingDeck: false});
};
var _NAlexPear$elm_slides$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'KeyPress':
				var _p3 = _p2._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							step: A2(_NAlexPear$elm_slides$Navigators$navigate, model, _p3)
						}),
					_1: A2(_NAlexPear$elm_slides$Main$handleEditEscape, model, _p3)
				};
			case 'GetSlides':
				if (_p2._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{slides: _p2._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'GetDecks':
				if (_p2._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{decks: _p2._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'SaveSlides':
				if (_p2._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{slides: _p2._0._0, isEditing: !model.isEditing}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'QueueSave':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _NAlexPear$elm_slides$Main$initiateSlideSave(model)
				};
			case 'ToggleEdit':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isEditing: !model.isEditing}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleChangeDeck':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isChangingDeck: !model.isChangingDeck}),
					_1: _NAlexPear$elm_slides$Requests$getDecks
				};
			case 'AddSlide':
				return {
					ctor: '_Tuple2',
					_0: _NAlexPear$elm_slides$Main$addSlide(model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							slides: A2(_NAlexPear$elm_slides$Main$updateSlides, model, _p2._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _NAlexPear$elm_slides$Main$main = _elm_lang$html$Html$program(
	{init: _NAlexPear$elm_slides$Main$init, view: _NAlexPear$elm_slides$Main$view, update: _NAlexPear$elm_slides$Main$update, subscriptions: _NAlexPear$elm_slides$Main$subscriptions})();
