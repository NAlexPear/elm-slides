var _NAlexPear$elm_slides$Main$view = function (model) {
	var iconClasses = (model.isChangingDeck || model.isEditingDeck) ? 'active' : '';
	var sidebar = _elm_lang$core$List$singleton(
		A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('icons'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(iconClasses),
					_1: {ctor: '[]'}
				}
			},
			_NAlexPear$elm_slides$Components$icons(model)));
	var renderer = _NAlexPear$elm_slides$Components$slide(model);
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html$node,
				'link',
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href('//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html$node,
					'link',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href('main.css'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id('container'),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$List$append,
							sidebar,
							A3(
								_elm_lang$core$Array$foldl,
								renderer,
								{ctor: '[]'},
								model.decks.current.slides))),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _NAlexPear$elm_slides$Main$subscriptions = function (model) {
	return _elm_lang$keyboard$Keyboard$ups(_NAlexPear$elm_slides$Message$KeyPress);
};
var _NAlexPear$elm_slides$Main$init = function () {
	var current = {title: '', id: 1, slides: _elm_lang$core$Array$empty};
	return {
		ctor: '_Tuple2',
		_0: {
			step: 0,
			decks: {current: current, others: _elm_lang$core$Array$empty},
			isEditing: false,
			isChangingDeck: false,
			isEditingDeck: false
		},
		_1: _NAlexPear$elm_slides$Requests$getDeck(1)
	};
}();
var _NAlexPear$elm_slides$Main$main = _elm_lang$html$Html$program(
	{init: _NAlexPear$elm_slides$Main$init, view: _NAlexPear$elm_slides$Main$view, update: _NAlexPear$elm_slides$Update$update, subscriptions: _NAlexPear$elm_slides$Main$subscriptions})();
