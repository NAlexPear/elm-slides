var _NAlexPear$elm_slides$Main$subscriptions = function (model) {
	return _elm_lang$keyboard$Keyboard$ups(_NAlexPear$elm_slides$Message$KeyPress);
};
var _NAlexPear$elm_slides$Main$init = function () {
	var deck = 1;
	return {
		ctor: '_Tuple2',
		_0: {
			step: 0,
			deck: deck,
			decks: {ctor: '[]'},
			slides: {ctor: '[]'},
			isEditing: false,
			isChangingDeck: false
		},
		_1: _NAlexPear$elm_slides$Slides$getSlides(deck)
	};
}();
var _NAlexPear$elm_slides$Main$renderFields = F2(
	function (model, slide) {
		var editState = _elm_lang$html$Html_Attributes$contenteditable(model.isEditing);
		return {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{
					ctor: '::',
					_0: editState,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(slide.title),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: editState,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(slide.content),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		};
	});
var _NAlexPear$elm_slides$Main$renderIcons = function (model) {
	var _p0 = model.isEditing;
	if (_p0 === true) {
		return {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$img,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('edit pointer'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src('icons/edit.svg'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$alt('Save Slides'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$ToggleEdit),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		};
	} else {
		return {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$img,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('edit pointer'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src('icons/edit.svg'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$alt('Edit Slides'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$ToggleEdit),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('add pointer'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$AddSlide),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('+'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('change pointer'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_NAlexPear$elm_slides$Message$ToggleChangeDeck),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('CHANGE'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		};
	}
};
var _NAlexPear$elm_slides$Main$renderSlide = F3(
	function (model, slide, acc) {
		var vw = (_elm_lang$core$List$length(acc) - model.step) * 100;
		var position = {
			ctor: '_Tuple2',
			_0: 'left',
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(vw),
				'vw')
		};
		var next = {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('slide'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: position,
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				},
				_elm_lang$core$List$concat(
					{
						ctor: '::',
						_0: _NAlexPear$elm_slides$Main$renderIcons(model),
						_1: {
							ctor: '::',
							_0: A2(_NAlexPear$elm_slides$Main$renderFields, model, slide),
							_1: {ctor: '[]'}
						}
					})),
			_1: {ctor: '[]'}
		};
		return A2(_elm_lang$core$List$append, acc, next);
	});
var _NAlexPear$elm_slides$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html$node,
				'link',
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href('main.css'),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('container'),
						_1: {ctor: '[]'}
					},
					A3(
						_elm_lang$core$List$foldl,
						_NAlexPear$elm_slides$Main$renderSlide(model),
						{ctor: '[]'},
						model.slides)),
				_1: {ctor: '[]'}
			}
		});
};
var _NAlexPear$elm_slides$Main$addSlide = function (model) {
	var step = model.step;
	var slide = {title: 'Click to Add Title', content: 'Click to Add Content'};
	var slides = A2(
		_elm_lang$core$List$append,
		model.slides,
		_elm_lang$core$List$singleton(slide));
	return {
		step: _elm_lang$core$List$length(slides) - 1,
		deck: model.deck,
		decks: model.decks,
		slides: slides,
		isEditing: true,
		isChangingDeck: false
	};
};
var _NAlexPear$elm_slides$Main$navigate = F2(
	function (model, code) {
		var slides = model.slides;
		var step = model.step;
		var _p1 = code;
		switch (_p1) {
			case 39:
				return A3(
					_elm_lang$core$Basics$clamp,
					0,
					step + 1,
					_elm_lang$core$List$length(slides) - 1);
			case 37:
				return A3(_elm_lang$core$Basics$clamp, 0, step, step - 1);
			default:
				return step;
		}
	});
var _NAlexPear$elm_slides$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'KeyPress':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							step: A2(_NAlexPear$elm_slides$Main$navigate, model, _p2._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'GetSlides':
				if (_p2._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{slides: _p2._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'GetDecks':
				if (_p2._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{decks: _p2._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'SaveSlides':
				if (_p2._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{slides: _p2._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'ToggleEdit':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isEditing: !model.isEditing}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleChangeDeck':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isChangingDeck: !model.isChangingDeck}),
					_1: _NAlexPear$elm_slides$Slides$getDecks
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _NAlexPear$elm_slides$Main$addSlide(model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _NAlexPear$elm_slides$Main$main = _elm_lang$html$Html$program(
	{init: _NAlexPear$elm_slides$Main$init, view: _NAlexPear$elm_slides$Main$view, update: _NAlexPear$elm_slides$Main$update, subscriptions: _NAlexPear$elm_slides$Main$subscriptions})();
var _NAlexPear$elm_slides$Main$Slide = F2(
	function (a, b) {
		return {title: a, content: b};
	});
var _NAlexPear$elm_slides$Main$Deck = F2(
	function (a, b) {
		return {title: a, id: b};
	});
var _NAlexPear$elm_slides$Main$Model = F6(
	function (a, b, c, d, e, f) {
		return {step: a, deck: b, decks: c, slides: d, isEditing: e, isChangingDeck: f};
	});
