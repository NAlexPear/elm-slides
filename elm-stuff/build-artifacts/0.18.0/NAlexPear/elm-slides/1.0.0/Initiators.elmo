var _NAlexPear$elm_slides$Initiators$initiateSlideDelete = function (_p0) {
	var _p1 = _p0;
	var _p4 = _p1.current;
	var remaining = A2(_elm_lang$core$Basics_ops['++'], _p4.slides.previous, _p4.slides.remaining);
	var newCurrent = function () {
		var _p2 = _elm_lang$core$List$head(remaining);
		if (_p2.ctor === 'Just') {
			return _p2._0;
		} else {
			return {content: '# There are no more slides in this deck! \n Edit this slide to start again', id: 1};
		}
	}();
	var newRemaining = function () {
		var _p3 = _elm_lang$core$List$tail(remaining);
		if (_p3.ctor === 'Just') {
			return _p3._0;
		} else {
			return {ctor: '[]'};
		}
	}();
	var slides = {
		previous: {ctor: '[]'},
		current: newCurrent,
		remaining: newRemaining
	};
	var newDeck = _elm_lang$core$Native_Utils.update(
		_p4,
		{slides: slides});
	return _NAlexPear$elm_slides$Requests$saveDeck(newDeck);
};
var _NAlexPear$elm_slides$Initiators$mapIdToIndex = F2(
	function (index, slide) {
		return _elm_lang$core$Native_Utils.update(
			slide,
			{id: index + 1});
	});
var _NAlexPear$elm_slides$Initiators$rejectSlideById = F2(
	function (id, slide) {
		return !_elm_lang$core$Native_Utils.eq(slide.id, id);
	});
