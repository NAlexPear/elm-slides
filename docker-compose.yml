version: '3.3'
services:
  proxy:
    restart: always
    build:
      context: ./services/proxy
      dockerfile: Dockerfile
    ports:
      - "9000:80"
    links:
      - frontend
      - api
      # - rocket

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: web_anon
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./services/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    expose:
      - "3000"
    links:
      - postgres
    environment:
      PGRST_DB_URI: postgres://web_anon:mysecretpassword@postgres:5432/app_db
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: web_anon

  # rocket:
  #   tty: true
  #   image: rust
  #   command: /bin/bash -c "rustup default nightly-2017-12-21 && cargo install --force && cargo build && ./target/debug/elm-slides-api"
  #   working_dir: /usr/src/elm-api
  #   expose:
  #     - "8000"
  #   volumes:
  #     - source: ./src/api
  #       target: /usr/src/elm-api
  #       type: bind

  frontend:
    tty: true
    image: node
    command: /bin/bash -c "npm install && npm run dev --unsafe-perm"
    working_dir: /usr/src/elm-slides
    expose:
      - "8080"
    volumes:
      - source: ./src/frontend
        target: /usr/src/elm-slides
        type: bind
      - source: node_modules
        target: /usr/src/elm-slides/node_modules
        type: volume

volumes:
  db-data:
  node_modules:
