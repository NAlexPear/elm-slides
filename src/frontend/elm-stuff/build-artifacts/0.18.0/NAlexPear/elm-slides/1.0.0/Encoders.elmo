var _NAlexPear$elm_slides$Encoders$encodeSlide = function (slide) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'content',
				_1: _elm_lang$core$Json_Encode$string(slide.content)
			},
			_1: {ctor: '[]'}
		});
};
var _NAlexPear$elm_slides$Encoders$encodeSlides = function (slides) {
	return _elm_lang$core$Json_Encode$list(
		A2(_elm_lang$core$List$map, _NAlexPear$elm_slides$Encoders$encodeSlide, slides));
};
var _NAlexPear$elm_slides$Encoders$encodeDeck = function (_p0) {
	var _p1 = _p0;
	var _p2 = _p1.slides;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'title',
				_1: _elm_lang$core$Json_Encode$string(_p1.title)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'slides',
					_1: _NAlexPear$elm_slides$Encoders$encodeSlides(
						A2(
							_elm_lang$core$Basics_ops['++'],
							_p2.previous,
							A2(
								_elm_lang$core$Basics_ops['++'],
								{
									ctor: '::',
									_0: _p2.current,
									_1: {ctor: '[]'}
								},
								_p2.remaining)))
				},
				_1: {ctor: '[]'}
			}
		});
};
